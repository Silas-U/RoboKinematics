import numpy as np
from scipy.spatial.transform import Rotation as R

def fk_to_vector(T):
    # Extract the position (x, y, z)
    position = T[:3, 3]
    # Extract the rotation matrix and convert to Euler angles (roll, pitch, yaw)
    rotation_matrix = T[:3, :3]
    r = R.from_matrix(rotation_matrix)
    euler_angles = r.as_euler('xyz', degrees=False)  # angles in radians
    # Combine position and orientation into a 1x6 vector
    vector_1x6 = np.hstack((position, euler_angles))
    
    return vector_1x6

# Example usage with a given transformation matrix T
T = np.array([
    [1, 0, 0, 1],
    [0, 1, 0, 2],
    [0, 0, 1, 3],
    [0, 0, 0, 1]
])

vector_1x6 = fk_to_vector(T)
print("1x6 vector:", vector_1x6)
